<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Currency Trading Journal</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f4f6;
        }
        .tab-active {
            border-bottom: 2px solid #3b82f6;
            color: #3b82f6;
            font-weight: 600;
        }
        [contenteditable="true"] {
            outline: 2px solid transparent;
            transition: outline 0.2s;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
        }
        [contenteditable="true"]:focus {
            outline: 2px solid #3b82f6;
            background-color: #eff6ff;
        }
        th {
            position: sticky;
            top: 0;
            background-color: #f9fafb;
            z-index: 10;
        }
        .profit {
            color: #16a34a;
            font-weight: 500;
        }
        .loss {
            color: #dc2626;
            font-weight: 500;
        }
        .dashboard-card {
            background-color: white;
            border-radius: 0.75rem;
            padding: 1.5rem;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            transition: transform 0.2s;
        }
        .dashboard-card:hover {
            transform: translateY(-5px);
        }
    </style>
</head>
<body class="p-4 md:p-8">

    <div class="max-w-7xl mx-auto bg-white rounded-xl shadow-lg overflow-hidden">
        <div class="p-6 border-b border-gray-200">
            <h1 class="text-2xl font-bold text-gray-800">Currency Trading Journal</h1>
            <p class="text-sm text-gray-500 mt-1">Track your trades and analyze your performance.</p>
        </div>

        <!-- Tabs -->
        <div class="flex border-b border-gray-200 px-6">
            <button id="tab-log" class="py-3 px-4 text-gray-500 tab-active">Trade Log</button>
            <button id="tab-dashboard" class="py-3 px-4 text-gray-500">Dashboard</button>
        </div>

        <!-- Content Area -->
        <div class="p-4 md:p-6">
            <!-- Trade Log Sheet -->
            <div id="sheet-log">
                <div class="overflow-x-auto">
                    <table id="trade-log-table" class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Pair</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Direction</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Open Date</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Entry Price</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Position Size</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Initial Cost</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Close Date</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Exit Price</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Commissions</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Gross P/L</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Net P/L</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Return %</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Strategy</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Notes</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200 text-sm text-gray-700">
                            <!-- Sample Data Rows -->
                            <tr>
                                <td class="px-4 py-2 whitespace-nowrap">1</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">Closed</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">EUR/USD</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">Buy</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">2025-08-12 10:30</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">1.08500</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">10000</td>
                                <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">2025-08-12 18:45</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">1.09000</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">4.50</td>
                                <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                                <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                                <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">Breakout</td>
                                <td class="px-4 py-2" contenteditable="true">Waited for confirmation.</td>
                            </tr>
                             <tr>
                                <td class="px-4 py-2 whitespace-nowrap">2</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">Closed</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">GBP/JPY</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">Sell</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">2025-08-11 09:15</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">198.55</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">5000</td>
                                <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">2025-08-11 15:00</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">198.20</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">6.00</td>
                                <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                                <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                                <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">Trend Follow</td>
                                <td class="px-4 py-2" contenteditable="true">Exited too early.</td>
                            </tr>
                            <tr>
                                <td class="px-4 py-2 whitespace-nowrap">3</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">Closed</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">AUD/CAD</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">Buy</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">2025-08-10 14:00</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">0.9120</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">20000</td>
                                <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">2025-08-11 11:30</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">0.9085</td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">5.50</td>
                                <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                                <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                                <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                                <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">Reversal</td>
                                <td class="px-4 py-2" contenteditable="true">Should have respected stop loss.</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <button id="add-row-btn" class="mt-4 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg transition">
                    + Add Trade
                </button>
            </div>

            <!-- Dashboard Sheet -->
            <div id="sheet-dashboard" class="hidden">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                    <div class="dashboard-card">
                        <h3 class="text-gray-500 font-medium">Total Net P/L</h3>
                        <p id="db-total-pl" class="text-3xl font-bold mt-2 text-gray-800">$0.00</p>
                    </div>
                    <div class="dashboard-card">
                        <h3 class="text-gray-500 font-medium">Win Rate %</h3>
                        <p id="db-win-rate" class="text-3xl font-bold mt-2 text-gray-800">0%</p>
                    </div>
                    <div class="dashboard-card">
                        <h3 class="text-gray-500 font-medium">Profit Factor</h3>
                        <p id="db-profit-factor" class="text-3xl font-bold mt-2 text-gray-800">0.00</p>
                    </div>
                    <div class="dashboard-card">
                        <h3 class="text-gray-500 font-medium">Total Trades</h3>
                        <p id="db-total-trades" class="text-3xl font-bold mt-2 text-gray-800">0</p>
                    </div>
                    <div class="dashboard-card">
                        <h3 class="text-gray-500 font-medium">Average Win</h3>
                        <p id="db-avg-win" class="text-3xl font-bold mt-2 text-green-600">$0.00</p>
                    </div>
                    <div class="dashboard-card">
                        <h3 class="text-gray-500 font-medium">Average Loss</h3>
                        <p id="db-avg-loss" class="text-3xl font-bold mt-2 text-red-600">$0.00</p>
                    </div>
                     <div class="dashboard-card">
                        <h3 class="text-gray-500 font-medium">Largest Win</h3>
                        <p id="db-largest-win" class="text-3xl font-bold mt-2 text-green-600">$0.00</p>
                    </div>
                    <div class="dashboard-card">
                        <h3 class="text-gray-500 font-medium">Largest Loss</h3>
                        <p id="db-largest-loss" class="text-3xl font-bold mt-2 text-red-600">$0.00</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // --- DOM Elements ---
            const tabLog = document.getElementById('tab-log');
            const tabDashboard = document.getElementById('tab-dashboard');
            const sheetLog = document.getElementById('sheet-log');
            const sheetDashboard = document.getElementById('sheet-dashboard');
            const tradeLogTable = document.getElementById('trade-log-table').getElementsByTagName('tbody')[0];
            const addRowBtn = document.getElementById('add-row-btn');

            // --- Tab Switching Logic ---
            function switchTab(activeTab) {
                if (activeTab === 'log') {
                    tabLog.classList.add('tab-active');
                    tabDashboard.classList.remove('tab-active');
                    sheetLog.classList.remove('hidden');
                    sheetDashboard.classList.add('hidden');
                } else {
                    tabLog.classList.remove('tab-active');
                    tabDashboard.classList.add('tab-active');
                    sheetLog.classList.add('hidden');
                    sheetDashboard.classList.remove('hidden');
                }
            }

            tabLog.addEventListener('click', () => switchTab('log'));
            tabDashboard.addEventListener('click', () => {
                updateAllCalculations();
                switchTab('dashboard');
            });
            
            // --- Calculation Engine ---
            function updateRowCalculations(row) {
                // Helper to get numerical value from a cell
                const getVal = (cellIndex) => parseFloat(row.cells[cellIndex].innerText.replace(/[^0-9.-]/g, '')) || 0;

                // Get values from the row
                const direction = row.cells[3].innerText.trim();
                const entryPrice = getVal(5);
                const positionSize = getVal(6);
                const exitPrice = getVal(9);
                const commissions = getVal(10);
                
                // Check if we have enough data to calculate
                if (entryPrice === 0 || positionSize === 0) return;

                // Calculate Initial Cost
                const initialCost = entryPrice * positionSize;
                row.cells[7].innerText = initialCost.toLocaleString('en-US', { style: 'currency', currency: 'USD' });

                // Check if trade is closed
                if (row.cells[1].innerText.trim().toLowerCase() !== 'closed' || exitPrice === 0) {
                    // Clear calculated fields if trade is not closed or exit price is missing
                    row.cells[11].innerText = '';
                    row.cells[12].innerText = '';
                    row.cells[13].innerText = '';
                    return;
                }

                // Calculate Gross P/L
                let grossPL = 0;
                if (direction.toLowerCase() === 'buy') {
                    grossPL = (exitPrice - entryPrice) * positionSize;
                } else if (direction.toLowerCase() === 'sell') {
                    grossPL = (entryPrice - exitPrice) * positionSize;
                }
                row.cells[11].innerText = grossPL.toLocaleString('en-US', { style: 'currency', currency: 'USD' });

                // Calculate Net P/L
                const netPL = grossPL - commissions;
                row.cells[12].innerText = netPL.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
                row.cells[12].classList.toggle('profit', netPL > 0);
                row.cells[12].classList.toggle('loss', netPL < 0);

                // Calculate Return %
                const returnPct = initialCost !== 0 ? (netPL / initialCost) * 100 : 0;
                row.cells[13].innerText = returnPct.toFixed(2) + '%';
                row.cells[13].classList.toggle('profit', returnPct > 0);
                row.cells[13].classList.toggle('loss', returnPct < 0);
            }

            // --- Dashboard Update Logic ---
            function updateDashboard() {
                const rows = Array.from(tradeLogTable.rows);
                const closedTrades = rows.filter(row => row.cells[1].innerText.trim().toLowerCase() === 'closed' && row.cells[12].innerText);
                
                const netPLs = closedTrades.map(row => parseFloat(row.cells[12].innerText.replace(/[^0-9.-]/g, '')) || 0);
                const wins = netPLs.filter(pl => pl > 0);
                const losses = netPLs.filter(pl => pl < 0);

                const totalPL = netPLs.reduce((sum, pl) => sum + pl, 0);
                const totalTrades = closedTrades.length;
                const winRate = totalTrades > 0 ? (wins.length / totalTrades) * 100 : 0;
                
                const totalWins = wins.reduce((sum, pl) => sum + pl, 0);
                const totalLosses = Math.abs(losses.reduce((sum, pl) => sum + pl, 0));
                
                const profitFactor = totalLosses > 0 ? totalWins / totalLosses : 0;
                const avgWin = wins.length > 0 ? totalWins / wins.length : 0;
                const avgLoss = losses.length > 0 ? totalLosses / losses.length : 0;
                const largestWin = wins.length > 0 ? Math.max(...wins) : 0;
                const largestLoss = losses.length > 0 ? Math.min(...losses) : 0;

                // Update DOM
                const dbTotalPL = document.getElementById('db-total-pl');
                dbTotalPL.innerText = totalPL.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
                dbTotalPL.classList.toggle('profit', totalPL > 0);
                dbTotalPL.classList.toggle('loss', totalPL < 0);

                document.getElementById('db-win-rate').innerText = winRate.toFixed(1) + '%';
                document.getElementById('db-profit-factor').innerText = profitFactor.toFixed(2);
                document.getElementById('db-total-trades').innerText = totalTrades;
                document.getElementById('db-avg-win').innerText = avgWin.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
                document.getElementById('db-avg-loss').innerText = Math.abs(avgLoss).toLocaleString('en-US', { style: 'currency', currency: 'USD' });
                document.getElementById('db-largest-win').innerText = largestWin.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
                document.getElementById('db-largest-loss').innerText = largestLoss.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
            }
            
            // --- Main Update Function ---
            function updateAllCalculations() {
                const rows = Array.from(tradeLogTable.rows);
                rows.forEach(updateRowCalculations);
                updateDashboard();
            }

            // --- Event Listeners for Table Edits ---
            tradeLogTable.addEventListener('input', function(e) {
                if (e.target.hasAttribute('contenteditable')) {
                    const row = e.target.closest('tr');
                    updateRowCalculations(row);
                }
            });

            // --- Add New Row Logic ---
            addRowBtn.addEventListener('click', function() {
                const newRow = tradeLogTable.insertRow();
                const lastRow = tradeLogTable.rows[tradeLogTable.rows.length - 2]; // get the row before the new one
                const lastId = lastRow ? parseInt(lastRow.cells[0].innerText) : 0;
                
                newRow.innerHTML = `
                    <td class="px-4 py-2 whitespace-nowrap">${lastId + 1}</td>
                    <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">Open</td>
                    <td class="px-4 py-2 whitespace-nowrap" contenteditable="true"></td>
                    <td class="px-4 py-2 whitespace-nowrap" contenteditable="true">Buy</td>
                    <td class="px-4 py-2 whitespace-nowrap" contenteditable="true"></td>
                    <td class="px-4 py-2 whitespace-nowrap" contenteditable="true"></td>
                    <td class="px-4 py-2 whitespace-nowrap" contenteditable="true"></td>
                    <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                    <td class="px-4 py-2 whitespace-nowrap" contenteditable="true"></td>
                    <td class="px-4 py-2 whitespace-nowrap" contenteditable="true"></td>
                    <td class="px-4 py-2 whitespace-nowrap" contenteditable="true"></td>
                    <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                    <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                    <td class="px-4 py-2 whitespace-nowrap calculated"></td>
                    <td class="px-4 py-2 whitespace-nowrap" contenteditable="true"></td>
                    <td class="px-4 py-2" contenteditable="true"></td>
                `;
            });

            // --- Initial Calculation on Load ---
            updateAllCalculations();
        });
    </script>
</body>
</html>
